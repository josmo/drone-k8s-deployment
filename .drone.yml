---
kind: pipeline
name: default

workspace:
  base: /go
  path: src/github.com/${DRONE_REPO_OWNER}/${DRONE_REPO_NAME}

platform:
  os: linux
  arch: amd64

steps:
  - name: deps
    pull: always
    image: golang:1.10
    commands:
      - go get -u github.com/golang/dep/cmd/dep
      - dep ensure

  - name: test
    pull: default
    image: golang:1.10
    depends_on: [ deps ]
    commands:
      - go vet
      - go test -cover -coverprofile=coverage.out

  - name: build_linux_amd64
    pull: default
    image: golang:1.10
    depends_on: [ test ]
    commands:
      - |
        if test "${DRONE_TAG}" = ""; then
          go build -v -ldflags "-X main.build=${DRONE_BUILD_NUMBER}" -a -o release/linux/amd64/${DRONE_REPO_NAME}
        else
          go build -v -ldflags "-X main.version=${DRONE_TAG##v} -X main.build=${DRONE_BUILD_NUMBER}" -a -o release/linux/amd64/${DRONE_REPO_NAME}
        fi
    environment:
      CGO_ENABLED: 0
      GOARCH: amd64
      GOOS: linux

  - name: build_linux_arm64
    pull: default
    image: golang:1.10
    depends_on: [ test ]
    commands:
      - |
        if test "${DRONE_TAG}" = ""; then
          go build -v -ldflags "-X main.build=${DRONE_BUILD_NUMBER}" -a -o release/linux/arm64/${DRONE_REPO_NAME}
        else
          go build -v -ldflags "-X main.version=${DRONE_TAG##v} -X main.build=${DRONE_BUILD_NUMBER}" -a -o release/linux/arm64/${DRONE_REPO_NAME}
        fi
    environment:
      CGO_ENABLED: 0
      GOARCH: arm64
      GOOS: linux

  - name: build_linux_arm
    pull: default
    image: golang:1.10
    depends_on: [ test ]
    commands:
      - |
        if test "${DRONE_TAG}" = ""; then
          go build -v -ldflags "-X main.build=${DRONE_BUILD_NUMBER}" -a -o release/linux/arm/${DRONE_REPO_NAME}
        else
          go build -v -ldflags "-X main.version=${DRONE_TAG##v} -X main.build=${DRONE_BUILD_NUMBER}" -a -o release/linux/arm/${DRONE_REPO_NAME}
        fi
    environment:
      CGO_ENABLED: 0
      GOARCH: arm
      GOARM: 7
      GOOS: linux

  - name: publish_linux_amd64
    pull: default
    image: plugins/docker
    depends_on: [ build_linux_amd64 ]
    settings:
      auto_tag: true
      dockerfile: Dockerfile
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
      repo:
        from_secret: plugin_repo
    when:
      event:
        - tag
        - push

  - name: publish_linux_arm64
    pull: default
    image: plugins/docker
    depends_on: [ build_linux_arm64 ]
    settings:
      auto_tag: true
      auto_tag_suffix: linux-arm64
      dockerfile: Dockerfile.arm64
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
      repo:
        from_secret: plugin_repo
    when:
      event:
        - tag
        - push

  - name: publish_linux_arm
    pull: default
    image: plugins/docker
    depends_on: [ build_linux_arm ]
    settings:
      auto_tag: true
      auto_tag_suffix: linux-arm
      dockerfile: Dockerfile.arm
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
      repo:
        from_secret: plugin_repo
    when:
      event:
        - tag
        - push

